---
const {navData} = Astro.props
import Theme from '../../components/Theme-UI/theme.astro'
---
<header
class="fixed lg:static top-0  w-full flex-wrap items-center justify-between z-30 bg-[var(--theme-bg)]"
data-te-navbar-ref
>
<!-- lg:flex-col -->
		<div class="flex justify-between items-center lg:flex-col lg:justify-center xl:flex-row xl:justify-between">
			<slot />
			
			<div class="lg:flex">

				<Theme />
				
				
				<nav
				class="hidden items-center bg-slate-500 lg:bg-transparent lg:relative  lg:mt-0 lg:!flex lg:basis-auto"
				>
					<!-- Left links -->
					<!-- Link -->
					<ul
					class="list-style-none mr-auto flex flex-col pl-0 lg:flex-row"
					data-te-navbar-nav-ref
					>
						{navData.map(data => {
							if(data.dropdown === true) {
								return (
									<li class=" sm:block relative dropdowns mx-2 lg:flex">
										<button data-title={data.title} class="dropdown text-sm rounded flex gap-1  items-center">
											{data.title}
											<svg viewBox="0 0 1024 1024" class="icon w-3" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M903.232 256l56.768 50.432L512 768 64 306.432 120.768 256 512 659.072z" ></path></g></svg>
										</button>
										<div data-title={data.title} class="absolute right-0 top-7 mt-2 w-48 bg-gray-800 rounded-md overflow-hidden z-10 hidden">
											{data.subcat.map(el => (
												<a href={el.slug} class="block px-4 py-2 text-sm text-gray-200 hover:bg-gray-700">
													{el.title}
												</a>
											))}
										</div>
									</li>
							)}
							else {
								return (
										<li class="mb-4 pl-2 lg:mb-0 lg:pl-0 lg:pr-1" data-te-nav-item-ref>
											<a
											class="p-0 text-sm transition duration-200  hover:ease-in-out 	motion-reduce:transition-none lg:px-2"
											href={`${data.slug}`}
											data-te-nav-link-ref
											>
												{data.title}
											</a>
										</li>
									)
								}
							})}
						</ul>
					</nav>
				</div>
			
			<input class="side-menu lg:hidden" type="checkbox" id="side-menu"/>
			<label class="hamb lg:hidden p-2" for="side-menu"><span class="hamb-line"></span></label>
		</div>

			
		<!-- Collapsible navbar container -->
		<nav
		class="list-items overflow-hidden z-100 fixed w-full h-full max-h-0 lg:max-h-full ease-out delay-75 transition-[max-height] basis-[100%] items-center bg-slate-500 lg:bg-transparent lg:relative lg:mt-0 lg:!hidden lg:basis-auto"
		id="navbarSupportedContent15"
		data-te-collapse-item
		>
			<!-- Left links -->
			<!-- Link -->
			<ul
			class="list-style-none mr-auto flex flex-col pl-0 lg:flex-row"
			data-te-navbar-nav-ref
			>
				{navData.map(data => {
					if(data.dropdown === true) {
						return (
							<li class=" sm:block relative dropdowns mx-2 lg:flex 	">
								<button data-title={data.title} class="dropdown text-sm rounded flex gap-1  items-center">
									{data.title}
									<svg viewBox="0 0 1024 1024" class="icon w-3" version="1.1" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M903.232 256l56.768 50.432L512 768 64 306.432 120.768 256 512 659.072z" ></path></g></svg>
								</button>
								<div data-title={data.title} class="absolute right-0 top-7 mt-2 w-48 bg-gray-800 rounded-md overflow-hidden z-10 hidden">
									{data.subcat.map(el => (
										<a href={el.slug} class="block px-4 py-2 text-sm text-gray-200 hover:bg-gray-700">
											{el.title}
										</a>
									))}
								</div>
							</li>
					)}
					else {
						return (
								<li class="mb-4 pl-2 lg:mb-0 lg:pl-0 lg:pr-1" data-te-nav-item-ref>
									<a
									class="p-0 text-sm transition duration-200  hover:ease-in-out 	motion-reduce:transition-none lg:px-2"
									href={`${data.slug}`}
									data-te-nav-link-ref
									>
										{data.title}
									</a>
								</li>
							)
						}
					})}
			</ul>
		</nav>
			
</header> 

<style>
	header {
		box-shadow: inset 0 0 0.5px 1px hsla(0, 0%,  
              100%, 0.075),
              /* shadow ring ðŸ‘‡ */
              0 0 0 1px hsla(0, 0%, 0%, 0.05),
              /* multiple soft shadows ðŸ‘‡ */
              0 0.3px 0.4px hsla(0, 0%, 0%, 0.02),
              0 0.9px 1.5px hsla(0, 0%, 0%, 0.045),
              0 3.5px 6px hsla(0, 0%, 0%, 0.09);
	}

	/* Menu Icon */
.hamb{
    cursor: pointer;
}/* Style label tag */

.hamb-line {
    background: var(--theme-on-bg);
    display: block;
    height: 2px;
    position: relative;
    width: 24px;

} /* Style span tag */

.hamb-line::before,
.hamb-line::after{
    background: var(--theme-on-bg);
    content: '';
    display: block;
    height: 100%;
    position: absolute;
    transition: all .2s ease-out;
    width: 100%;
}
.hamb-line::before{
    top: 5px;
}
.hamb-line::after{
    top: -5px;
}

.side-menu {
    display: none;
} /* Hide checkbox */

/* .side-menu:checked, nav{
    max-height: 100%;
} */
.side-menu:checked ~ .hamb .hamb-line {
    background: transparent;
}
.side-menu:checked ~ .hamb .hamb-line::before {
    transform: rotate(-45deg);
    top:0;
}
.side-menu:checked ~ .hamb .hamb-line::after {
    transform: rotate(45deg);
    top:0;
}
</style>

<script>
  const dropdownToggle = document.querySelectorAll('.dropdown');
  const dropdownMenu = document.querySelectorAll('.dropdowns > div');
  console.log(dropdownMenu);
  console.log(dropdownToggle);

  dropdownToggle.forEach(elDad => elDad.addEventListener('click', () => {
    dropdownMenu.forEach(el => {
		console.log(elDad.getAttribute('data-title'));
		if(elDad.getAttribute('data-title') === el.getAttribute('data-title')){
			el.classList.toggle('hidden')
		}
	});
  }))

  const menu:HTMLInputElement = document.querySelector('.side-menu')
  const nav = document.querySelector('nav.list-items')

  menu.addEventListener('change', function() {
	if(this.checked) {
		nav.classList.add('max-h-full')
		nav.classList.remove('max-h-0')
	}
	else {
		nav.classList.remove('max-h-full')
		nav.classList.add('max-h-0')
	}

  })
</script>
